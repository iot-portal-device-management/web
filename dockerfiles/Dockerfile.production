# Defaults
ARG NODE_VERSION=16-alpine3.16

FROM node:${NODE_VERSION} AS builder

# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why
# libc6-compat might be needed.
RUN apk add --no-cache libc6-compat

WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* ./

RUN set -eux; \
    if [ -f yarn.lock ]; then yarn --frozen-lockfile; \
    elif [ -f package-lock.json ]; then npm ci; \
    elif [ -f pnpm-lock.yaml ]; then yarn global add pnpm && pnpm i; \
    else echo "Lockfile not found." && exit 1; \
    fi

COPY . .

# Disable telemetry. Learn more here: https://nextjs.org/telemetry
ENV NEXT_TELEMETRY_DISABLED=1

RUN npm run build


FROM node:${NODE_VERSION} AS runner

LABEL com.iotportaldevicemanagement.product="iotportaldevicemanagement"

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

WORKDIR /app

RUN set -eux; \
    addgroup -g 1001 -S web; \
    adduser -S web -u 1001; \
    mkdir -p /home/web/.npm; \
    chown -R web:web /home/web/.npm

COPY --from=builder --chown=web:web /app/node_modules ./node_modules

COPY --from=builder --chown=web:web /app/package.json ./package.json

COPY --from=builder --chown=web:web /app/public ./public

COPY --from=builder --chown=web:web /app/.next ./.next

USER web:web

EXPOSE 3000

CMD ["npm", "run", "start"]

# docker build -f dockerfiles/Dockerfile.production -t iotportaldevicemanagement-web .